import pxtrace
import px

program = """
#include <asm/fpu/internal.h>
#include <asm/fpu/types.h>
tracepoint:x86_fpu:x86_fpu_regs_deactivated
{
    $f = (struct fpu *)args->fpu;
    $mxcsr = $f->state.xsave.i387.mxcsr;
    $fpcr = ($mxcsr & 0x6000) >> 13;
    if ($fpcr != 0) { 
        printf(\"time_:%llu pid:%d comm:%s fpcr:%d\",
                nsecs, pid, comm, $fpcr);
    }
}
"""

table_name = 'fpcr_values'
pxtrace.UpsertTracepoint(table_name,
                         table_name,
                         program,
                         pxtrace.kprobe(),
                         "10m")

proc = px.DataFrame(table='process_stats')
proc.pod = proc.ctx['pod']
proc.pid = px.upid_to_pid(proc.upid)
proc.asid = px.upid_to_asid(proc.upid)
proc_to_pod = proc.groupby(['pod', 'pid', 'asid']).agg()

df = px.DataFrame(table=table_name)
df.asid = px.asid()
df = df.merge(proc_to_pod,
              how='inner',
              left_on=['pid', 'asid'],
              right_on=['pid', 'asid'])
df = df.groupby('pod').agg(count=('fpcr', px.count))
px.display(df)
